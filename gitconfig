[alias]
	barfoo = status
	co = checkout
	ci = commit
	st = status
	br = branch
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p
	create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
	delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
	merge-branch = !git checkout master && git merge @{-1}
	pr = !hub pull-request
	up = !git fetch origin && git rebase origin/master
	aa = add --all
	ap = add --patch
	dc = diff --cached
	arb = "!git log -g --grep-reflog \"checkout:\" --format=\"%gs\" | sed -E \"s/.*from .* to (.*)/\\1/\" | tail -n +2 ; git branch -r --format='%(refname:short)' | sed -E \"s:origin/::\""
	all-recent-branches = "!git arb | awk '!x[$0]++'"
	sb = "!git checkout $( git all-recent-branches | fzy )"
	pu = push -u origin HEAD
	pf = push --force-with-lease
	rbc = rebase --continue
	fx = "!target=$( git log --oneline | fzy | awk '{ print $1; }' ) && git commit -n --fixup=${target} && GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash --autostash ${target}^"
    cp = cherry-pick

[color]
	ui = auto

[user]
	email = c.m.lesueur@gmail.com
	name = Chris Le Sueur

[diff "zip"]
	textconv = unzip -c -a
[difftool]
	prompt = false
[mergetool]
	prompt = false
[core]
	editor = vim
	excludesfile = ~/.gitignore
[push]
	default = simple
[rerere]
	enabled = true
[submodule]
	recurse = true
[include]
	path = .gitconfig.local
[merge]
	conflictstyle = diff3
	tool = meld
[pull]
	ff = only
[mergetool "meld"]
	cmd = meld --auto-merge "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"
	hideResolved = true
